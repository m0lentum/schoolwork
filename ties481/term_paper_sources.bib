
@article{lagae_survey_2010,
	title = {A Survey of Procedural Noise Functions},
	volume = {29},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2010.01827.x},
	doi = {10.1111/j.1467-8659.2010.01827.x},
	abstract = {Procedural noise functions are widely used in computer graphics, from off-line rendering in movie production to interactive video games. The ability to add complex and intricate details at low memory and authoring cost is one of its main attractions. This survey is motivated by the inherent importance of noise in graphics, the widespread use of noise in industry and the fact that many recent research developments justify the need for an up-to-date survey. Our goal is to provide both a valuable entry point into the field of procedural noise functions, as well as a comprehensive view of the field to the informed reader. In this report, we cover procedural noise functions in all their aspects. We outline recent advances in research on this topic, discussing and comparing recent and well-established methods. We first formally define procedural noise functions based on stochastic processes and then classify and review existing procedural noise functions. We discuss how procedural noise functions are used for modelling and how they are applied to surfaces. We then introduce analysis tools and apply them to evaluate and compare the major approaches to noise generation. We finally identify several directions for future work.},
	pages = {2579--2600},
	number = {8},
	journaltitle = {Computer Graphics Forum},
	author = {Lagae, A. and Lefebvre, S. and Cook, R. and {DeRose}, T. and Drettakis, G. and Ebert, D.s. and Lewis, J.p. and Perlin, K. and Zwicker, M.},
	urldate = {2021-12-04},
	date = {2010},
	langid = {english},
	keywords = {noise, and texture, anisotropic noise, anti-aliasing, filtering, Gabor noise, I.3.3 Computer Graphics: Picture/Image Generation—I.3.7 Computer Graphics: Three-Dimensional Graphics and Realism-Colour, Perlin noise, power spectrum estimation, procedural, procedural modelling, procedural noise function, procedural texture, shading, shadowing, solid noise, solid texture, sparse convolution noise, spectral analysis, spot noise, stochastic modelling, stochastic process, surface noise, texture synthesis, wavelet noise},
	file = {Full Text PDF:/home/mole/Zotero/storage/BKMYD3Y5/Lagae et al. - 2010 - A Survey of Procedural Noise Functions.pdf:application/pdf;Snapshot:/home/mole/Zotero/storage/FPJU5TH3/j.1467-8659.2010.01827.html:text/html}
}

@video{eiserloh_noise-based_2017,
	title = {Noise-Based {RNG}},
	url = {https://www.youtube.com/watch?v=LWFzPP8ZbdU},
	abstract = {In this 2017 {GDC} Math for Game Programmers talk, {SMU} Guildhall's  Squirrel Eiserloh discuss {RNGs} vs. noise functions, and shows how the latter can replace the former in your math library and provide many other benefits (unordered access, better reseeding, record/playback, network loss tolerance, lock-free parallelization, etc.) while being smaller, faster, and easier to use.

Join the {GDC} mailing list: http://www.gdconf.com/subscribe

Follow {GDC} on Twitter: https://twitter.com/Official\_GDC 

{GDC} talks cover a range of developmental topics including game design, programming, audio, visual arts, business management, production, online games, and much more. We post a fresh {GDC} video every day.  Subscribe to the channel to stay on top of regular updates, and check out {GDC} Vault  for thousands of more in-depth talks from our archives.},
	author = {Eiserloh, S.},
	urldate = {2021-12-04},
	date = {2017-03-01}
}

@inproceedings{perlin_improving_2002,
	location = {New York, {NY}, {USA}},
	title = {Improving noise},
	isbn = {978-1-58113-521-3},
	url = {https://doi.org/10.1145/566570.566636},
	doi = {10.1145/566570.566636},
	series = {{SIGGRAPH} '02},
	abstract = {Two deficiencies in the original Noise algorithm are corrected: second order interpolation discontinuity and unoptimal gradient computation. With these defects corrected, Noise both looks better and runs faster. The latter change also makes it easier to define a uniform mathematical reference standard.},
	pages = {681--682},
	booktitle = {Proceedings of the 29th annual conference on Computer graphics and interactive techniques},
	publisher = {Association for Computing Machinery},
	author = {Perlin, Ken},
	urldate = {2021-12-05},
	date = {2002-07-01},
	keywords = {procedural texture},
	file = {Full Text PDF:/home/mole/Zotero/storage/Z6ZLEEA8/Perlin - 2002 - Improving noise.pdf:application/pdf}
}

@article{perlin_image_1985,
	title = {An image synthesizer},
	volume = {19},
	issn = {0097-8930},
	url = {https://doi.org/10.1145/325165.325247},
	doi = {10.1145/325165.325247},
	abstract = {We introduce the concept of a Pixel Stream Editor. This forms the basis for an interactive synthesizer for designing highly realistic Computer Generated Imagery. The designer works in an interactive Very High Level programming environment which provides a very fast concept/implement/view iteration cycle.Naturalistic visual complexity is built up by composition of non-linear functions, as opposed to the more conventional texture mapping or growth model algorithms. Powerful primitives are included for creating controlled stochastic effects. We introduce the concept of "solid texture" to the field of {CGI}.We have used this system to create very convincing representations of clouds, fire, water, stars, marble, wood, rock, soap films and crystal. The algorithms created with this paradigm are generally extremely fast, highly realistic, and asynchronously parallelizable at the pixel level.},
	pages = {287--296},
	number = {3},
	journaltitle = {{ACM} {SIGGRAPH} Computer Graphics},
	shortjournal = {{SIGGRAPH} Comput. Graph.},
	author = {Perlin, Ken},
	urldate = {2021-12-05},
	date = {1985-07-01},
	keywords = {solid texture, stochastic modelling, algorithm development, fire, functional composition, interactive, pixel stream editor, space function, turbulence, waves},
	file = {Full Text PDF:/home/mole/Zotero/storage/87JBLIM9/Perlin - 1985 - An image synthesizer.pdf:application/pdf}
}

@article{barufaldi_computational_2021,
	title = {Computational Breast Anatomy Simulation Using Multi-Scale Perlin Noise},
	volume = {40},
	issn = {1558-254X},
	doi = {10.1109/TMI.2021.3087958},
	abstract = {Virtual clinical trials ({VCTs}) of medical imaging require realistic models of human anatomy. For {VCTs} in breast imaging, a multi-scale Perlin noise method is proposed to simulate anatomical structures of breast tissue in the context of an ongoing breast phantom development effort. Four Perlin noise distributions were used to replace voxels representing the tissue compartments and Cooper’s ligaments in the breast phantoms. Digital mammography and tomosynthesis projections were simulated using a clinical {DBT} system configuration. Power-spectrum analyses and higher-order statistics properties using Laplacian fractional entropy ({LFE}) of the parenchymal texture are presented. These objective measures were calculated in phantom and patient images using a sample of 140 clinical mammograms and 500 phantom images. Power-law exponents were calculated using the slope of the curve fitted in the low frequency [0.1, 1.0] mm−1 region of the power spectrum. The results show that the images simulated with our prior and proposed Perlin method have similar power-law spectra when compared with clinical mammograms. The power-law exponents calculated are −3.10, −3.55, and −3.46, for the log-power spectra of patient, prior phantom and proposed phantom images, respectively. The results also indicate an improved agreement between the mean {LFE} estimates of Perlin-noise based phantoms and patients than our prior phantoms and patients. Thus, the proposed method improved the simulation of anatomic noise substantially compared to our prior method, showing close agreement with breast parenchyma measures.},
	pages = {3436--3445},
	number = {12},
	journaltitle = {{IEEE} Transactions on Medical Imaging},
	author = {Barufaldi, Bruno and Abbey, Craig K. and Lago, Miguel A. and Vent, Trevor L. and Acciavatti, Raymond J. and Bakic, Predrag R. and Maidment, Andrew D. A.},
	date = {2021-12},
	note = {Conference Name: {IEEE} Transactions on Medical Imaging},
	keywords = {Perlin noise, anthropomorphic breast phantom, Breast, Clinical trials, Computational modeling, digital breast tomosynthesis, Imaging phantoms, Ligaments, Noise measurement, Phantoms, virtual clinical trial},
	file = {IEEE Xplore Full Text PDF:/home/mole/Zotero/storage/HM9K4S7X/Barufaldi et al. - 2021 - Computational Breast Anatomy Simulation Using Mult.pdf:application/pdf;IEEE Xplore Abstract Record:/home/mole/Zotero/storage/DYRMY69H/9449901.html:text/html}
}

@inproceedings{perlin_hypertexture_1989,
	location = {New York, {NY}, {USA}},
	title = {Hypertexture},
	isbn = {978-0-89791-312-6},
	url = {https://doi.org/10.1145/74333.74359},
	doi = {10.1145/74333.74359},
	series = {{SIGGRAPH} '89},
	abstract = {We model phenomena intermediate between shape and texture by using space-filling applicative functions to modulate density. The model is essentially an extension of procedural solid texture synthesis, but evaluated throughout a volumetric region instead of only at surfaces.We have been able to obtain visually realistic representations of such shape+texture (hypertexture) phenomena as hair, fur, fire, glass, fluid flow and erosion effects. We show how this is done, first by describing a set of base level functions to provide basic texture and control capability, then by combining these to synthesize various phenomena.Hypertexture exists within an intermediate region between object and not-object. We introduce a notion of generalized boolean shape operators to combine shapes having such a region.Rendering is accomplished by ray marching from the eye point through the volume to accumulate opacity along each ray. We have implemented our hypertexture rendering algorithms on a traditional serial computer, a distributed network of computers and a coarse-grain {MIMD} computer. Extensions to the rendering technique incorporating refraction and reflection effects are discussed.},
	pages = {253--262},
	booktitle = {Proceedings of the 16th annual conference on Computer graphics and interactive techniques},
	publisher = {Association for Computing Machinery},
	author = {Perlin, K. and Hoffert, E. M.},
	urldate = {2021-12-05},
	date = {1989-07-01},
	file = {Full Text PDF:/home/mole/Zotero/storage/6GMK7DY2/Perlin and Hoffert - 1989 - Hypertexture.pdf:application/pdf}
}

@inproceedings{prieto_traffic_2012,
	title = {Traffic generator using Perlin Noise},
	doi = {10.1109/GLOCOM.2012.6503384},
	abstract = {Study of high speed networks such as optical next generation burst or packet switched networks require large amounts of synthetic traffic to feed simulators. Methods to generate self-similar long range dependent traffic already exist but they usually work by generating large blocks of traffic of fixed time duration. This limits simulated time or require very high amount of data to be stored before simulation. On this work it is shown how self-similar traffic can be generated using Perlin Noise, an algorithm commonly used to generate 2D/3D noise for natural looking graphics. 1-dimension Perlin Noise can be interpreted as network traffic and used to generate long range dependent traffic for network simulation. The algorithm is compared to more classical approach Random Midpoint Displacement showing at traffic generated is similar but can be generated continuously with no fixed block size.},
	eventtitle = {2012 {IEEE} Global Communications Conference ({GLOBECOM})},
	pages = {1847--1852},
	booktitle = {2012 {IEEE} Global Communications Conference ({GLOBECOM})},
	author = {Prieto, Iria and Izal, Mikel and Morato, Daniel and Magaña, Eduardo},
	date = {2012-12},
	note = {{ISSN}: 1930-529X},
	keywords = {Perlin noise, generator, Optical, traffic},
	file = {IEEE Xplore Full Text PDF:/home/mole/Zotero/storage/UZRY7EVQ/Prieto et al. - 2012 - Traffic generator using Perlin Noise.pdf:application/pdf;IEEE Xplore Abstract Record:/home/mole/Zotero/storage/GENYCY75/6503384.html:text/html}
}

@online{kensler_better_2008,
	title = {Better Gradient Noise},
	url = {https://sci.utah.edu/publications/SCITechReports/UUSCI-2008-001.pdf},
	author = {Kensler, A. and Knoll, A. and Shirley, P.},
	urldate = {2021-12-05},
	date = {2008-04-08},
	file = {Better Gradient Noise:/home/mole/Zotero/storage/7ZNNUB5P/UUSCI-2008-001.pdf:application/pdf}
}

@article{bridson_curl-noise_2007,
	title = {Curl-noise for procedural fluid flow},
	volume = {26},
	issn = {0730-0301},
	url = {https://doi.org/10.1145/1276377.1276435},
	doi = {10.1145/1276377.1276435},
	abstract = {Procedural methods for animating turbulent fluid are often preferred over simulation, both for speed and for the degree of animator control. We offer an extremely simple approach to efficiently generating turbulent velocity fields based on Perlin noise, with a formula that is exactly incompressible (necessary for the characteristic look of everyday fluids), exactly respects solid boundaries (not allowing fluid to flow through arbitrarily-specified surfaces), and whose amplitude can be modulated in space as desired. In addition, we demonstrate how to combine this with procedural primitives for flow around moving rigid objects, vortices, etc.},
	pages = {46--es},
	number = {3},
	journaltitle = {{ACM} Transactions on Graphics},
	shortjournal = {{ACM} Trans. Graph.},
	author = {Bridson, Robert and Houriham, Jim and Nordenstam, Marcus},
	urldate = {2021-12-05},
	date = {2007-07-29},
	keywords = {noise, turbulence, fluids, procedural animation},
	file = {Full Text PDF:/home/mole/Zotero/storage/5369AYTC/Bridson et al. - 2007 - Curl-noise for procedural fluid flow.pdf:application/pdf}
}

@report{jakes_perlin_2019,
	title = {Perlin Noise Generation of Physiologically Realistic Patterns of Fibrosis},
	rights = {© 2019, Posted by Cold Spring Harbor Laboratory. This pre-print is available under a Creative Commons License (Attribution-{NoDerivs} 4.0 International), {CC} {BY}-{ND} 4.0, as described at http://creativecommons.org/licenses/by-nd/4.0/},
	url = {https://www.biorxiv.org/content/10.1101/668848v1},
	abstract = {Fibrosis, the pathological excess of fibroblast activity, is a significant health issue that hinders the function of many organs in the body, in some cases fatally. However, the severity of fibrosis-derived conditions depends on both the positioning of fibrotic affliction, and the microscopic patterning of fibroblast-deposited matrix proteins within afflicted regions. Variability in an individual’s manifestation of a type of fibrosis is an important factor in explaining differences in symptoms, optimum treatment and prognosis, but a need for ex vivo procedures and a lack of experimental control over conflating factors has meant this variability remains poorly understood. In this work, we present a computational methodology for the generation of patterns of fibrosis microstructure, demonstrating the technique using histological images of four types of cardiac fibrosis. Our generator and automated tuning method prove flexible enough to capture each of these very distinct patterns, allowing for rapid generation of new realisations for high-throughput computational studies. We also demonstrate via simulation, using the generated fibrotic patterns, the importance of micro-scale variability by showing significant differences in electrophysiological impact even within a single class of fibrosis.},
	pages = {668848},
	author = {Jakes, David and Burrage, Kevin and Drovandi, Christopher C. and Burrage, Pamela and Bueno-Orovio, Alfonso and Santos, Rodrigo Weber dos and Rodriguez, Blanca and Lawson, Brodie A. J.},
	urldate = {2021-12-05},
	date = {2019-06-19},
	langid = {english},
	doi = {10.1101/668848},
	note = {Company: Cold Spring Harbor Laboratory
Distributor: Cold Spring Harbor Laboratory
Label: Cold Spring Harbor Laboratory
Section: New Results
Type: article},
	file = {Snapshot:/home/mole/Zotero/storage/2AA6WECL/668848v1.html:text/html;Full Text PDF:/home/mole/Zotero/storage/ZDSNCVBK/Jakes et al. - 2019 - Perlin Noise Generation of Physiologically Realist.pdf:application/pdf}
}

@article{wang_inherent_2014,
	title = {Inherent Noise-Aware Insect Swarm Simulation},
	volume = {33},
	issn = {1467-8659},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.12277},
	doi = {10.1111/cgf.12277},
	abstract = {Collective behaviour of winged insects is a wondrous and familiar phenomenon in the real world. In this paper, we introduce a highly efficient field-based approach to simulate various insect swarms. Its core idea is to construct a smooth yet noise-aware governing velocity field that can be further decomposed into two sub-fields: (i) a divergence-free curl-noise field to model noise-induced movements of individual insects in a swarm, and (ii) an enhanced global velocity field to control navigational paths in a complex environment along which all the insects in a swarm fly. Through simulation experiments and comparisons with existing crowd simulation approaches, we demonstrate that our approach is effective to simulate various insect swarm behaviours including aggregation, positive phototaxis, sedation, mass-migrating, and so on. Besides its high efficiency, our approach is very friendly to parallel implementation on {GPUs} (e.g. the speedup achieved through {GPU} acceleration is higher than 50 if the number of simulated insects is more than 10 000 on an off-the-shelf computer). Our approach is the first multi-agent modelling system that introduces curl-noise into agents' velocity field and uses its non-scattering nature to maintain non-colliding movements in 3D crowd simulation.},
	pages = {51--62},
	number = {6},
	journaltitle = {Computer Graphics Forum},
	author = {Wang, Xinjie and Jin, Xiaogang and Deng, Zhigang and Zhou, Linling},
	urldate = {2021-12-05},
	date = {2014},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1111/cgf.12277},
	keywords = {crowd simulation, curl-noise, I.3.7 Computer Graphics: Three-Dimensional Graphics and Realism Animation, I.3.7 Computer Graphics: Three-Dimensional Graphics and {RealismVirtual} Reality, insect swarms, multi-agent systems, path planning, potential field},
	file = {Full Text PDF:/home/mole/Zotero/storage/GFD4KFS6/Wang et al. - 2014 - Inherent Noise-Aware Insect Swarm Simulation.pdf:application/pdf;Snapshot:/home/mole/Zotero/storage/TVX7WUA2/cgf.html:text/html}
}

@online{eevee_perlin_2016,
	title = {Perlin noise},
	url = {https://eev.ee/blog/2016/05/29/perlin-noise/},
	abstract = {I used Perlin noise for the fog effect and title screen in Under Construction. I {\textless}a href=},
	author = {Eevee},
	urldate = {2021-12-06},
	date = {2016-05-29},
	langid = {english},
	file = {Snapshot:/home/mole/Zotero/storage/K5FIZSG3/perlin-noise.html:text/html}
}

@article{schechter_evolving_2008,
	title = {Evolving Sub-Grid Turbulence for Smoke Animation},
	abstract = {We introduce a simple turbulence model for smoke animation, qualitatively capturing the transport, diffusion, and spectral cascade of turbulent energy unresolved on a typical simulation grid. We track the mean kinetic energy per octave of turbulence in each grid cell, and a novel “net rotation” variable for modeling the self-advection of turbulent eddies. These additions to a standard ﬂuid solver drive a procedural post-process, layering plausible dynamically evolving turbulent details on top of the large-scale simulated motion. Finally, to make the most of the simulation grid before jumping to procedural sub-grid models, we propose a new multistep predictor to alleviate the nonphysical dissipation of angular momentum in standard graphics ﬂuid solvers.},
	pages = {7},
	author = {Schechter, H and Bridson, R},
	date = {2008},
	langid = {english},
	file = {Schechter and Bridson - Evolving Sub-Grid Turbulence for Smoke Animation.pdf:/home/mole/Zotero/storage/CI4XBIBL/Schechter and Bridson - Evolving Sub-Grid Turbulence for Smoke Animation.pdf:application/pdf}
}

@article{perlin_real-time_2002,
	title = {Real-Time Shading Languages},
	volume = {Course 36},
	url = {https://www.csee.umbc.edu/~olano/s2002c36/},
	pages = {26},
	journaltitle = {{SIGGRAPH} 2002},
	author = {Perlin, Ken and Mark, Bill and Heidrich, Wolfgang and Hart, John and Olano, Marc},
	urldate = {2021-12-06},
	date = {2002-07-29},
	langid = {english},
	file = {Perlin - Chapter 2 Noise Hardware.pdf:/home/mole/Zotero/storage/9DG65F3H/Perlin - Chapter 2 Noise Hardware.pdf:application/pdf;Real-Time Shading Languages:/home/mole/Zotero/storage/E48RZQFS/s2002c36.html:text/html}
}

@thesis{kahraman_influence_2017,
	title = {Influence of Fog on Computer Vision Algorithms},
	url = {https://hal.inria.fr/hal-01620602},
	abstract = {This technical report describes a new preliminary approach to simulate fog in images using accurate physical and photometric models to study the influence of small particles on computer vision algorithms.},
	institution = {Inria Paris},
	type = {report},
	author = {Kahraman, Sule and Charette, Raoul de},
	urldate = {2021-12-06},
	date = {2017-09-27},
	langid = {english},
	note = {Pages: 1},
	file = {Full Text PDF:/home/mole/Zotero/storage/RLQE5YYN/Kahraman and Charette - 2017 - Influence of Fog on Computer Vision Algorithms.pdf:application/pdf;Snapshot:/home/mole/Zotero/storage/5R68NLWN/hal-01620602.html:text/html}
}

@inproceedings{perez-garcia_simulation_2020,
	location = {Cham},
	title = {Simulation of Brain Resection for Cavity Segmentation Using Self-supervised and Semi-supervised Learning},
	isbn = {978-3-030-59716-0},
	doi = {10.1007/978-3-030-59716-0_12},
	series = {Lecture Notes in Computer Science},
	abstract = {Resective surgery may be curative for drug-resistant focal epilepsy, but only 40\% to 70\% of patients achieve seizure freedom after surgery. Retrospective quantitative analysis could elucidate patterns in resected structures and patient outcomes to improve resective surgery. However, the resection cavity must first be segmented on the postoperative {MR} image. Convolutional neural networks ({CNNs}) are the state-of-the-art image segmentation technique, but require large amounts of annotated data for training. Annotation of medical images is a time-consuming process requiring highly-trained raters, and often suffering from high inter-rater variability. Self-supervised learning can be used to generate training instances from unlabeled data. We developed an algorithm to simulate resections on preoperative {MR} images. We curated a new dataset, {EPISURG}, comprising 431 postoperative and 269 preoperative {MR} images from 431 patients who underwent resective surgery. In addition to {EPISURG}, we used three public datasets comprising 1813 preoperative {MR} images for training. We trained a 3D {CNN} on artificially resected images created on the fly during training, using images from 1) {EPISURG}, 2) public datasets and 3) both. To evaluate trained models, we calculate Dice score ({DSC}) between model segmentations and 200 manual annotations performed by three human raters. The model trained on data with manual annotations obtained a median (interquartile range) {DSC} of 65.3 (30.6). The {DSC} of our best-performing model, trained with no manual annotations, is 81.7 (14.2). For comparison, inter-rater agreement between human annotators was 84.0 (9.9). We demonstrate a training method for {CNNs} using simulated resection cavities that can accurately segment real resection cavities, without manual annotations.},
	pages = {115--125},
	booktitle = {Medical Image Computing and Computer Assisted Intervention – {MICCAI} 2020},
	publisher = {Springer International Publishing},
	author = {Pérez-García, Fernando and Rodionov, Roman and Alim-Marvasti, Ali and Sparks, Rachel and Duncan, John S. and Ourselin, Sébastien},
	editor = {Martel, Anne L. and Abolmaesumi, Purang and Stoyanov, Danail and Mateus, Diana and Zuluaga, Maria A. and Zhou, S. Kevin and Racoceanu, Daniel and Joskowicz, Leo},
	date = {2020},
	langid = {english},
	keywords = {Neurosurgery, Segmentation, Self-supervised learning},
	file = {Springer Full Text PDF:/home/mole/Zotero/storage/YTM39MB7/Pérez-García et al. - 2020 - Simulation of Brain Resection for Cavity Segmentat.pdf:application/pdf}
}